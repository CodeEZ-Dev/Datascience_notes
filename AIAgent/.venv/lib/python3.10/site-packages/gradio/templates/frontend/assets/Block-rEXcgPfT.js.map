{"version":3,"file":"Block-rEXcgPfT.js","sources":["../../../../js/atoms/src/Block.svelte"],"sourcesContent":["<script lang=\"ts\">\n\texport let height: number | string | undefined = undefined;\n\texport let min_height: number | string | undefined = undefined;\n\texport let max_height: number | string | undefined = undefined;\n\texport let width: number | string | undefined = undefined;\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let variant: \"solid\" | \"dashed\" | \"none\" = \"solid\";\n\texport let border_mode: \"base\" | \"focus\" | \"contrast\" = \"base\";\n\texport let padding = true;\n\texport let type: \"normal\" | \"fieldset\" = \"normal\";\n\texport let test_id: string | undefined = undefined;\n\texport let explicit_call = false;\n\texport let container = true;\n\texport let visible = true;\n\texport let allow_overflow = true;\n\texport let overflow_behavior: \"visible\" | \"auto\" = \"auto\";\n\texport let scale: number | null = null;\n\texport let min_width = 0;\n\texport let flex = false;\n\n\tif (!visible) flex = false;\n\n\tlet tag = type === \"fieldset\" ? \"fieldset\" : \"div\";\n\n\tconst get_dimension = (\n\t\tdimension_value: string | number | undefined\n\t): string | undefined => {\n\t\tif (dimension_value === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (typeof dimension_value === \"number\") {\n\t\t\treturn dimension_value + \"px\";\n\t\t} else if (typeof dimension_value === \"string\") {\n\t\t\treturn dimension_value;\n\t\t}\n\t};\n</script>\n\n<svelte:element\n\tthis={tag}\n\tdata-testid={test_id}\n\tid={elem_id}\n\tclass:hidden={visible === false}\n\tclass=\"block {elem_classes.join(' ')}\"\n\tclass:padded={padding}\n\tclass:flex\n\tclass:border_focus={border_mode === \"focus\"}\n\tclass:border_contrast={border_mode === \"contrast\"}\n\tclass:hide-container={!explicit_call && !container}\n\tstyle:height={get_dimension(height)}\n\tstyle:min-height={get_dimension(min_height)}\n\tstyle:max-height={get_dimension(max_height)}\n\tstyle:width={typeof width === \"number\"\n\t\t? `calc(min(${width}px, 100%))`\n\t\t: get_dimension(width)}\n\tstyle:border-style={variant}\n\tstyle:overflow={allow_overflow ? overflow_behavior : \"hidden\"}\n\tstyle:flex-grow={scale}\n\tstyle:min-width={`calc(min(${min_width}px, 100%))`}\n\tstyle:border-width=\"var(--block-border-width)\"\n\tclass:auto-margin={scale === null}\n>\n\t<slot />\n</svelte:element>\n\n<style>\n\t.block {\n\t\tposition: relative;\n\t\tmargin: 0;\n\t\tbox-shadow: var(--block-shadow);\n\t\tborder-width: var(--block-border-width);\n\t\tborder-color: var(--block-border-color);\n\t\tborder-radius: var(--block-radius);\n\t\tbackground: var(--block-background-fill);\n\t\twidth: 100%;\n\t\tline-height: var(--line-sm);\n\t}\n\n\t.auto-margin {\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n\n\t.block.border_focus {\n\t\tborder-color: var(--color-accent);\n\t}\n\n\t.block.border_contrast {\n\t\tborder-color: var(--body-text-color);\n\t}\n\n\t.padded {\n\t\tpadding: var(--block-padding);\n\t}\n\n\t.hidden {\n\t\tdisplay: none;\n\t}\n\n\t.flex {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\t.hide-container {\n\t\tmargin: 0;\n\t\tbox-shadow: none;\n\t\t--block-border-width: 0;\n\t\tbackground: transparent;\n\t\tpadding: 0;\n\t\toverflow: visible;\n\t}\n</style>\n"],"names":["ctx","svelte_element","svelte_element_data","toggle_class","set_style","insert","target","anchor","get_spread_update","svelte_element_levels","svelte_element_class_value","create_dynamic_element","height","$$props","min_height","max_height","width","elem_id","elem_classes","variant","border_mode","padding","type","test_id","explicit_call","container","visible","allow_overflow","overflow_behavior","scale","min_width","flex","tag","get_dimension","dimension_value"],"mappings":"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"}